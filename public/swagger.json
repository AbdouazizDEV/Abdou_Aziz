{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "v1",
    "description": "API documentation for managing users, referentiels, promotions, and authentication."
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Login",
        "operationId": "login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "Logout",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List all users",
        "operationId": "listUsers",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user by ID",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/forAdmin": {
      "post": {
        "summary": "Create a user for admin",
        "operationId": "createUserForAdmin",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          }
        }
      }
    },
    "/users/import": {
      "post": {
        "summary": "Import users",
        "operationId": "importUsers",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Users imported successfully"
          }
        }
      }
    },
    "/referentiels": {
      "get": {
        "summary": "List all referentiels",
        "operationId": "listReferentiels",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of referentiels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Referentiel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a referentiel",
        "operationId": "createReferentiel",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referentiel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Referentiel created successfully"
          }
        }
      }
    },
    "/referentiels/{id}": {
      "get": {
        "summary": "Get a referentiel by ID",
        "operationId": "getReferentielById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A referentiel object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referentiel"
                }
              }
            }
          },
          "404": {
            "description": "Referentiel not found"
          }
        }
      },
      "patch": {
        "summary": "Update a referentiel by ID",
        "operationId": "updateReferentiel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referentiel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Referentiel updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete a referentiel by ID",
        "operationId": "deleteReferentiel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Referentiel deleted successfully"
          }
        }
      }
    },
    "/promotions": {
      "get": {
        "summary": "List all promotions",
        "operationId": "listPromotions",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of promotions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Promotion"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a promotion",
        "operationId": "createPromotion",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Promotion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Promotion created successfully"
          }
        }
      }
    },
    "/promotions/{id}": {
      "get": {
        "summary": "Get a promotion by ID",
        "operationId": "getPromotionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A promotion object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotion"
                }
              }
            }
          },
          "404": {
            "description": "Promotion not found"
          }
        }
      },
      "patch": {
        "summary": "Update a promotion by ID",
        "operationId": "updatePromotion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Promotion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Promotion updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete a promotion by ID",
        "operationId": "deletePromotion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Promotion deleted successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Referentiel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Promotion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "referentielId": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}